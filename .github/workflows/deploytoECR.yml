name: Deploy Microservices to AWS EKS

on:
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.TF_REGION }}
  TAG: ${{ github.run_number }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get AWS Account ID
      id: aws-info
      run: echo "account_id=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_OUTPUT

    - name: Set ECR registry variable
      run: echo "ECR_REGISTRY=${{ steps.aws-info.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com" >> $GITHUB_ENV

    - name: Clone Helm charts
      run: git clone https://github.com/microservices-project-k8s-jenkins/ecommerce-chart.git

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build with Maven
      run: ./mvnw clean package

    - name: Build and Push Docker Images
      run: |
        services=(
          cloud-config
          service-discovery
          api-gateway
          proxy-client
          order-service
          payment-service
          product-service
          shipping-service
          user-service
          favourite-service
        )

        for service in "${services[@]}"; do
          echo "Building and pushing $service"
          docker build -t $ECR_REGISTRY/$service:$TAG $service
          docker tag $ECR_REGISTRY/$service:$TAG $ECR_REGISTRY/$service:latest
          docker push $ECR_REGISTRY/$service:$TAG
          docker push $ECR_REGISTRY/$service:latest
        done

    - name: Set up kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        kubectl version --client

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --name ${{ secrets.TF_EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Deploy to EKS via Helm
      run: |
        BRANCH="${{ github.ref_name }}"
        if [[ "$BRANCH" == "dev" ]]; then
          NAMESPACE="dev"
          VALUES_FILE="values-dev.yaml"
        elif [[ "$BRANCH" == "stage" ]]; then
          NAMESPACE="stage"
          VALUES_FILE="values-stage.yaml"
        elif [[ "$BRANCH" == "main" || "$BRANCH" == "master" ]]; then
          NAMESPACE="master"
          VALUES_FILE="values-master.yaml"
        else
          echo "Unsupported branch: $BRANCH"
          exit 1
        fi

        kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

        helm upgrade --install ecommerce-app ecommerce-chart \
          --namespace $NAMESPACE \
          --set cloud-config.image.tag=$TAG \
          --set service-discovery.image.tag=$TAG \
          --set api-gateway.image.tag=$TAG \
          --set proxy-client.image.tag=$TAG \
          --set order-service.image.tag=$TAG \
          --set payment-service.image.tag=$TAG \
          --set product-service.image.tag=$TAG \
          --set shipping-service.image.tag=$TAG \
          --set user-service.image.tag=$TAG \
          --set favourite-service.image.tag=$TAG \
          -f ecommerce-chart/$VALUES_FILE \
          --wait --timeout=10m

    - name: Generate Release Notes
      run: |
        git log -n 20 --pretty=format:"* %s (%an)" > release-notes.md
        cat release-notes.md

    - name: Upload Release Notes
      if: success() && hashFiles('release-notes.md') != ''
      uses: actions/upload-artifact@v3.1.3
      with:
        name: release-notes
        path: release-notes.md
